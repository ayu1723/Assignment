# -*- coding: utf-8 -*-
"""6FebAssignment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PfV5AYYGQCAS4Qj30QxsXZ8QXU01SJsx
"""

def mul_list(l):
    flat_list=[]
    for item in l:
      if isinstance(item, (int,float)):
        flat_list.append(item)
      elif isinstance(item, (list,set,tuple)):
        flat_list.extend([i for i in item if isinstance(item, (int,float))])
      elif isinstance(item,dict):
        for x in item.values():
          if isinstance(x, (int,float)):
            flat_list.append((x))

    product=1
    for n in flat_list:
      product*=n
    return product

list1=[1, 2, 3, 4, [44, 55, 66, True], False, (34, 56, 78, 89, 34), {1, 2, 3, 3, 2, 1}, {1: 34, "key2": [55, 67, 78, 89], 4: (45, 22, 61, 34)}, [56, 'data science'], 'Machine Learning']
result=mul_list(list1)
print(result)

def encrypt_message(message):
    encrypted=''
    for char in message:
      if char.isalpha():
        if char.islower():
          encrypted_char=chr(ord('a') + (25 - (ord(char) - ord('a'))))
        else:
          encrypted_char=chr(ord('A') + (25 - (ord(char) - ord('A'))))
        encrypted += encrypted_char
      elif char=='':
        encrypted+='$'
      else:
        encrypted+=char
    return encrypted


input_sentence='I want to become a Data Scientist.'
lcaseip=input_sentence.lower()
encrypted_sentence=encrypt_message(lcaseip)
print(encrypted_sentence)



