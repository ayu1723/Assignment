# -*- coding: utf-8 -*-
"""30january.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aEwPYlRnFMWE06WHNkobNjWzKSa0ntms
"""

s=int(input('enter the marks'))
if s>90:
	print('A')
elif s>80 and s<=90:
	print('B')
elif s>=60 and s<=80:
	print('C')
else:
	print('D')

cp=float(input('enter the cost price of the bike: '))
if cp > 100000:
  t=0.15
elif cp> 50000 and cp<=100000:
  t=0.10
else:
  t=0.005
rt=t*cp
print(rt,'is the road tax to be paid')



city=input(print('enter any city(agra/delhi/jaipur)'))
if city=='delhi':
  print('monument: red fort')
if city=='agra':
  print('monument: taj mahal')
if city=='jaipur':
  print('monument: jal mahal')

def mul3(n):
  count=0
  while n>10:
    n/=3
    count+=1
  return count
number=int(input('enter a number'))
res=mul3(number)
print(f'the number divided by 3 is divided {res} times before less than or equal to 10')

#7&8:
num=10
while num>=1:
  print(num)
  num-=1

'''A while loop in Python is used to repeatedly execute a block of code as long as a specified condition is True. It provides a way to create iterative processes where you want to repeat an action until a certain condition is met. The loop keeps executing as long as the condition remains true, and it stops as soon as the condition evaluates to false.
When to Use a While Loop:Unknown Iteration Count: When you don't know in advance how many times you need to repeat a certain task. Unlike for loops where you specify the range of iterations, while loops are suitable when the exact number of iterations depends on some dynamic condition.
Dynamic Conditions: When you want to keep iterating based on a changing condition that can't be easily predicted or represented by a simple range.
Continuous Polling: When you need to continuously monitor some condition (e.g., user input, sensor data) and take action based on changes.
Simulating Events: When you're simulating an event-driven process, such as a game loop, where you want the game logic to keep running as long as certain conditions are met.
Stopping at a Specified Condition: When you want to repeat a process until a specific condition is met, after which the loop terminates.
Example:
'''
i = 0
while i < 6:
  i += 1
  if i == 3:
    continue
  print(i)

